/* 파일을 다루기
* 파일 포인터가 필요하다. ==> FILE *fp;
* 파일을 열기 위해서는 ==> fopen_s(&fp, "filename", "rb"); // 파일이 열리지 않을 경우, fp의 값이 NULL이 됨
* 파일에 대한 처리가 끝났으면 ==> fclose(fp);
* FILE이란: 구조체이다. 파일 입출력 함수들이 이 구조체를 사용하여 데이터를 주고 받는다. stdio.h에 정의되어 있다.
*
* 이진파일의 대표적인 예: 영상 파일
* 이진파일 입력: int fread(void *buf, int size, int count, FILE *fp); // 원본은 fp에 있고, *buf에다가 저장해서...어쩔저쩔
* 이진파일 출력: int write(void *buf, int size, int count, FILE *fp); // 원본은 fp에 있고, *buf에다가 출력
* 이진파일 닫음: fclose(fp);
*
* 디지털 영상
* : 픽셀들의 어레이(픽셀들이 행과 열로 배치되어 있음)
* : 흑백 영상의 경우 각 픽셀은 밝기(intensity)값을 가짐. - 각 픽셀의 밝기 값은 0~255 내의 정수
* : 칼라 영상의 경우 각 픽셀은 RGB 3개 채널의 값을 가짐. - R,G,B 각각 채널 값은 0~255 내의 정수
* : 칼라 영상을 흑백 영상으로 변환할 수 있음 --> (R+G+B)/3
* 
* 이진파일의 임의 위치 접근: fseek()
* : int fseek(FILE *fp, long offset, int origin);
* : 인자 origin이 취할 수 있는 값
*   1. SEEK_SET 0 파일의 처음
*   2. SEEK_CUR 1 파일의 현재 위치
*   3. SEEK_END 2 파일의 끝
* : 함수 rewind()
*   1. void rewind(FILE *fp);
*   2. It is equivalent to fseek(fp, 0L, SEEK_SET);
* : 함수 ftell()
*   1. long ftell(FILE *fp);
*   2. It returns the current file position for fp, or -1L on error
*/
